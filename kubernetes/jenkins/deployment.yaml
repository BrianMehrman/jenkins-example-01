apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins
  labels:
    app: jenkins
spec:
  selector:
    matchLabels:
      app: jenkins
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      serviceAccountName: jenkins
      containers:
      - name: jenkins
        image: bcmehrman/jenkins:0.0.2
        imagePullPolicy: Always
        env:
        - name: DOCKER_HOST
          value: "tcp://dind:2375"
        - name: JAVA_OPTS
          value: -Xmx2048m -Dhudson.slaves.NodeProvisioner.MARGIN=50 -Dhudson.slaves.NodeProvisioner.MARGIN0=0.85
        - name: CASC_JENKINS_CONFIG
          value: /var/jenkins_home/jenkins.yaml
        envFrom:
        - secretRef:
            name: jenkins
        ports:
        - containerPort: 8080
          protocol: TCP
        - containerPort: 50000
          protocol: TCP
        volumeMounts:
        - mountPath: /var/jenkins_home
          name: jenkins
        - name: jcasc-config-volume
          mountPath: /var/jenkins_home/jenkins.yaml
          subPath: jenkins.yaml
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "500m"
      - name: kustomize
        image: bcmehrman/kustomize:0.0.1
        imagePullPolicy: Always
        ports:
        - containerPort: 8081
        resources: 
          limits:
            memory: "256Mi"
            cpu: "500m"
      restartPolicy: Always
      securityContext:
        runAsUser: 0
      terminationGracePeriodSeconds: 30
      volumes:
      - name: jenkins
        persistentVolumeClaim:
          claimName: jenkins-claim
      - name: jcasc-config-volume
        configMap:
          name: jcasc-config
